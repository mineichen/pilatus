[package]
edition = "2021"
name = "pilatus"
version = "0.1.0"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
# Stable
anyhow = "1"
bytes = "1"
rayon = { version = "1", optional = true }
serde = { version = "1", features = ["derive"] }
serde_json = "1"
thiserror = "1"
tokio = { version = "1", features = [
  "fs",
  "rt",
  "sync",
  "time",
  "tracing",
], optional = true }
uuid = { version = "1", features = ["serde", "v4"] }
smallvec = "1"

# Unstable
approx = "0.5"
async-trait = "0.1"
chrono = { version = "0.4", features = ["serde"] }
config = "0.13"
futures = "0.3"
glob = "0.3"
minfac = "0.0.1"
sealedstruct = { git = "https://github.com/mineichen/sealedstruct.git", branch = "main", features = [
  "serde",
] }
tracing = "0.1"

[dev-dependencies]
tokio = { version = "1", features = [
  "fs",
  "macros",
  "rt",
  "sync",
  "time",
  "tracing",
] }
tempfile = { version = "3" }


[features]
default = []
# Ok to depend during tests, as compile errors immediately show up in that project
# When project which uses pilatus/unstable itself is referenced, it doesn't break if unstable features change
# This feature should only be activated in tests and leaf-crates, on which noone depends
# With these restrictions, we can avoid using a dedicated cfg (like 'tokio_unstable'). For tokio this doesn't work, as e.g. tracing-subscriber relies on unstable features 
unstable = []
